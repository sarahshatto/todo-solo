[{"/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/index.js":"1","/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/App.js":"2","/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/reportWebVitals.js":"3","/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/header/header.js":"4","/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/to-do/to-do.js":"5","/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/to-do/form.js":"6","/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/to-do/list.js":"7"},{"size":479,"mtime":1607296704487,"results":"8","hashOfConfig":"9"},{"size":442,"mtime":1607296621780,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607280349897,"results":"11","hashOfConfig":"9"},{"size":818,"mtime":1607296787780,"results":"12","hashOfConfig":"9"},{"size":1865,"mtime":1607296682133,"results":"13","hashOfConfig":"9"},{"size":1802,"mtime":1607294768012,"results":"14","hashOfConfig":"9"},{"size":1230,"mtime":1607296644239,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ulzbc4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/index.js",[],["32","33"],"/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/App.js",[],"/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/reportWebVitals.js",[],"/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/header/header.js",[],"/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/to-do/to-do.js",[],"/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/to-do/form.js",["34"],"import React, {useState, useEffect} from 'react';\nimport MyMainForm from './form.js';\nimport List from './list.js';\nimport axios from 'axios';\n\nfunction ToDo(){\n\n    const [itemList, setItemList] = useState([])\n\n    useEffect( () => {\n        getAll();\n    },[]);\n\n    async function getAll(){\n        try{\n            let results = await axios({\n                method: 'get',\n                url: 'https://api-js401.herokuapp.com/api/v1/todo'\n            });\n            setItemList(results.data.results)\n        }catch(err){\n            console.log(err);\n        }\n       \n\n    };\n\n    async function makePost(item){\n        try{\n        let results = await axios({\n            method: 'post',\n            url: 'https://api-js401.herokuapp.com/api/v1/todo',\n            data: item\n        }); \n        console.log('POST RESULTS***********', results)\n        }catch (e){\n            console.log(e);\n        }\n\n    };\n\n    async function makePut(item, id){\n      try{\n      let results = await axios({\n          method: 'put',\n          url: `https://api-js401.herokuapp.com/api/v1/todo/${id}`,\n          data: item\n      }); \n      console.log('Put RESULTS***********', results)\n      getAll();\n      }catch (e){\n          console.log(e);\n      }\n\n  };\n\n  async function makeDelete(id){\n    try{\n    let results = await axios({\n        method: 'delete',\n        url: `https://api-js401.herokuapp.com/api/v1/todo/${id}`\n    }); \n    console.log('dElEtE RESULTS***********', results)\n    getAll();\n    }catch (e){\n        console.log(e);\n    }\n\n};\n\n\n    function updateList(arr){\n        setItemList(arr)\n    }\n\n    return(\n        <>\n\n        <MyMainForm updateList={updateList} makePost={makePost}/>\n        <List makeDelete={makeDelete} makePut={makePut} />\n        </>\n    )\n}\n\nexport default ToDo;","/Users/Sarah/Desktop/CodeFellows/Code401/ReactPractice/todo-solo/todo-solo/src/components/to-do/list.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":8,"column":12,"nodeType":"41","messageId":"42","endLine":8,"endColumn":20},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'itemList' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]